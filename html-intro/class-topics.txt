
HTML
Learn to write and use HTML for producing effective web sites. Course covers web site design, navigation principles hyperlinks, tables, frames, forms and Cascading Style Sheets (CSS). An added emphasis of this course is the use of CSS for both formatting and for creating dynamic content. Other topics include in-depth CSS, Server Side Scripting and Client Side Scripting. Helpful Experience: comfortable working with Windows. 


Emphasis:
- Navigation
- Tables
- Forms
- CSS


========================================
Topics - Class One

- How the internet works:
    - Traffic is routed through the networks
	- HTTP / DNS / IP Address
	- Register a domain with a registrar
	- Client/Server
	
- What is a web browser?
	- There are many browser packages, both for computers and cell phones
	- The primary browsers are IE, Firefox, Safari, and Chrome
	- What is a rendering engine? (Gecko, Webkit, Trident)
	- There are variations in how engines display pages
	
- What is HTML, and where does it fit?
	- HTML describes a document structure
	- It's a markup language and isn't intended to do anything else
	- CSS is used to describe how the elements look
	- Javascript is used to make them more interactive

- How to get help/learn
	- Google
	- Power of view source
	
- How to create an html document
	- Open editor (Notepad++)
	- Save as plain text file called "index.html"
	- Why index? Why ".html"?
	- What is plain text versus rich text?
	
- The Foundation of an HTML Document
	- Doctype [Basics]
	- html, head, title, body elements
	- State of html versions
	- Don't use old elements: font, b, i, etc
	
- Creating your first document
	- html, head, title, body
	- h1, p, strong, em
	- [LAB]:
		- add an image using the google homepage logo (http://www.google.com/intl/en_ALL/images/logo.gif)
	- anchors
	
- Basics of CSS
	- element selector
	- classes
	- IDs
	- Colors [http://www.colorpicker.com/]


========================================
Topics - Class Two

- [LAB]
	- Building a basic page using elements from last class
	- Uses: h1, p, span, also try: a

- Doctypes
	- Defining dictionary
	- General ideas of differences between versions
	- Transitional versus Strict
	
- DIVs
	- The empty element for all purposes
	- Often used for "wrapping"
	- More power than tables and not forced into a structure like table cells
	
- Basics of inspecting with Firebug

- Box Model:
	- width, height (problems with calcs among browsers)
	- padding, border, margin
	- top, left, right, bottom
	- position
	- block-level and inline
	
- [Lab]:
	- Play with floating the box, positioning the box.
	- Add a third div and float all three

- Include external css file
	<link rel="stylesheet" type="text/css" href="class.css" />
	<style type="text/css">@import url(style.css);</style>
	- Discuss relative URLs

- Article Example 1
	- Start with core html and p tag content
	- Look at image in first p, discuss alignment
	- Assign font-family to body, background color of #eee
	- Use wrapping div to center text, create narrow page
	- Explain margin for centering
	- H1 styling
	- Float image left, give it padding, border, margin
	- Playing with line-height
	- Discuss EM measurement, makes sizes relative
	(More: http://jontangerine.com/log/2007/09/the-incredible-em-and-elastic-layouts-with-css)
	- Adding a blockquote
	
- Article Examples 2
	- Creating containers for left and right columns
	- Sizing them properly, allowing room in the middle
	- Floating the columns
	- Discussing the float bug on parent containers
	- Adding a clear float to a new div, which contains both floated columns
	- Adding a basic footer
	
- Style table using css
	- background colors
	- borders
	- spacing
	- th vs td

- Validating pages with web developer toolbar


========================================
Topics - Class Three

- [LAB]
	- Floating two DIVs within a parent container
	- Clearfloat

- Planning your layout with wireframes
- CSS Reset
	- http://html5doctor.com/html-5-reset-stylesheet/
	
- Create your core div structure without content
	- Header, floats and a container, footer
	- Clearing your floats
- Using a grid to ensure you have solid alignment
- Using min-height for testing without content
- Using rgba for great way to see boxes without impacting size

- Adding content
	- Adding title text to your title, h1
	- Adding text to your p, and footer

- Building navigation
	- Creating an ol for a list of links
	- Adding a sub list within a list item

- [LAB]
	- Swap navigation and content positions using floats

- Filling in coloring and styling
	- Background image into h1, text-indent to hide text
	- Background image repeating, positioning
	
	- Styling navigation text
	- Intro to the :hover pseudo class
	
- Special Characters
	- different encoding sets
	- how to specify one

	- What is an entity?
	- ISO 8859 (windows) and UTF-8 are widely supported

	HTML4 and below: <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
	HTML5: <meta charset="utf-8">
	http://leftlogic.com/lounge/articles/entity-lookup/


========================================
Topics - Class Four

- Tables
	- table
	- tr, th, td
	- thead, tbody, tfoot
	- caption
	- Data versus layout
	- discuss semantics of tables (data!)
	- Explain border-collapse
	- Show an example of a site built with tables:
	http://nobeltec.com/products/prod_sounder.asp
	- [LAB]
		- colspan, rowspan

- DL/DT/DD
- [LAB]
	- Floating the table and dl
	
- [LAB]
	- Create a table with paragraph text wrapped around it
	
- Looking at other elements
	- br
	- abbr
	- acronym
	- big / small
	- cite
	- sub / sup
	- pre
	
- Conditional comments http://www.quirksmode.org/css/condcom.html

- How to learn about browser bugs
	- IE (http://www.positioniseverything.net/explorer.html)
	- Firefox/Safari
	- Finding your own http://experiments.botsko.net/tests/firefox_li_bug/li-test.html


========================================
Topics - Class Five

- Forms
	- form, action method
	- fieldset, legend
	- input
		- text
		- radio
		- checkbox
		- password
		- hidden
	- select/option/optgroup
	- textarea
	- labels
	- buttons/submit/reset
	- tab order
	- selected/checked

- Processing Form Data
	- GET versus POST
	- What is PHP/PERL/RUBY
	
- [LAB]
	- Creating a basic form with first name, last name, and email
	
- Exploring CSS Selectors
	- Compatibility: http://www.quirksmode.org/css/contents.html
	
	- Safe Selectors:
	 	- *
		- element name
		- classes
		- id
		- element.class
		- element#id
		- shared classes
		- comma-separated
		- nested, any level
		- immediate child only (>)
		- next element (+)
		- attributes
		- hover
		
	- Mostly Safe:
		- first-child
		
	- Safe CSS3 Selectors
		- empty
		- last-child
		- not
		
- [LAB]
	- Select only the first li, which is nested
	- Select all form elements


========================================
Topics - Class Six


LAB:
- Building the typical header/content/footer with two columns layout
- Finding the issue with the paragraph hover.

- Intro to HTML5
	- article
	- section
	- header
	- footer
	- aside
	- nav
	- You must explicitly set them all to display: block (until HTML5 is final)
	- Which browsers support it
	- IE HTML5Shim (http://code.google.com/p/html5shim/)

- How Search Engines work
	- What's an index/spider
	- How does Google evaluate content?
		- Importance to titles, URL, h1s, incoming link text
		- Importance from how it appears on the page
		- Reading your navigation properly
		- Associating content together for better understanding

		Spider simulator
		http://www.feedthebot.com/tools/spider/index.php

- CSS Frameworks
	- Blueprint (ttp://www.blueprintcss.org/)
	- 960 http://960.gs/

- Finding Web Hosting
	- What is a server, really?
	- What is FTP?
	- Url is mapped to specific folder on server (www, htdocs, public_html)
	- Uploading your files
	- "index.html" file is always the default

- Purchasing a domain name
	- Costs
	- What is SSL
	- What are nameservers?
	- Expiration watchers
	
- Looking at an FTP Client
	- Hostname (domain name)
	- User/password
	- Navigating remote/local folders
	- Uploading/downloading
	
- Where next?
	- Why/Why Not Javascript
	- Why/Why Not PHP
	- CMS Software (Wordpress)
	
- Book Recommendations?
	- HTML5 for Web Designers / CSS3 for Web Designers (http://books.alistapart.com/)
	- CSS Mastery http://www.amazon.com/o/ASIN/1430223979?tag=betteraddons-20
	- Designing with Web Standards http://www.amazon.com/o/ASIN/0321616952?tag=betteraddons-20
	
- Where to find help?
 	- http://www.htmlforums.com/
	- StackOverflow (http://stackoverflow.com/)

- Final Questions

- Evaluations. THESE MUST BE COMPLETED (temporarily at: http://10.70.140.16/entry.php)

- Distribute certifications


Reserve topics:
- Cache
- HTTP Headers



Resources
========================================
	
http://www.alvit.de/handbook/index.php
	

CSS Resources / Reading
http://www.456bereastreet.com/
http://www.smashingmagazine.com/2007/01/19/53-css-techniques-you-couldnt-live-without/
http://www.campaignmonitor.com/css/
http://css-discuss.incutio.com/?page=FrontPage
http://www.css3.info/


Tools:
http://leftlogic.com/lounge/articles/entity-lookup/
https://www.google.com/analytics
https://browserlab.adobe.com/index.html
http://analyze.websiteoptimization.com
http://www.feedthebot.com/tools/spider/index.php


http://stackoverflow.com


Recommended Firefox Extensions
https://addons.mozilla.org/en-US/firefox/collections/view/3df574e1-a4a3-7c48-965b-0625fc25c01b


Me
http://www.botsko.net