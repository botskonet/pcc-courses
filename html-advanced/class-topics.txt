Wizard's-Level HTML
Explore the next level of HTML and CSS. Course provides a look at methods used on the web today including advanced CSS styling and positioning, understanding doctype differences, html5, css3, and best practices for web and mobile devices. Prerequisite: comfortable with html and css basics.  

========================================
Topics - Class One

- The State of the Web
- What is html5
- What is css3?
- Where are the browsers at?

- Beginning HTML5 (http://www.alistapart.com/articles/previewofhtml5)
	- Introducing the new elements for page structure
	- Setting display:block for Safari, Chrome, Firefox < 4
	
- Updating an existing webpage to HTML5, while reducing clutter

	- Ways to reduce clutter
		- HTML5 moves us away from "div-itis"
		- Using smarter selectors in CSS avoids "class-itis"

	- Article (The article element represents an independent section of a document, page or site. It is suitable for content like news or blog articles, forum posts or individual comments.)
		- Convert #wrap to an article
	
	- Header (The header element represents the header of a section.)
		- Convert #header to a header element
		- Move banner to outside header
		- Merge div.row with header
	
	- Nav (The nav element represents a section of navigation links.)
		- Convert navigation parent div to nav
		- Remove #logo, replace with nav>a
		- Remove ul class, change selector to header ul
		
	- Convert #content to an article
		
	- Aside (The aside element is for content that is tangentially related to the content around it.)
		- Convert sidebar div to an aside
		- Conver .side to aside ul
		- Convert divs with .col-220 to asides
		 Remove aside holding form - merge form/aside css
	
	- Section (The section element represents a generic section of a document or application, such as a chapter, for example.)
		- Convert div.col-700 to a section
		- Merge extra content container div with section
		
	- Footer (The footer element represents the footer for the section it applies to.)
		- Convert #footer to footer
		- Merge footer div.row with footer
		
	- Other Cleanup
		- Remove .row entirely
		
	- Checking work in IE8
	- Using IE shiv (http://code.google.com/p/html5shiv/)
	

		
========================================
Topics - Class Two	
			
CSS2 Techniques in Use Today

- Creating a hover menu system using css
	- Creating nested lists and understanding semantic hierarchy
	- Hiding the nested ul by default
	- Use the :hover pseudo element to show the submenu
	
	(Understanding positions: http://www.quirksmode.org/css/position.html)
	- Set parent li to position:relative
	- Set sub ul to position:absolute
	
	(Understanding z-index: https://developer.mozilla.org/en/understanding_css_z-index)
	- Fix the z-index problems with banner and sub-uls
	- Set background color of the sub ul so it's no transparent
	- Correct margins/padding
	
- Playing with position: fixed
	- Create a new div
	- Set basic width, height, and background-color
	- Set position:fixed, set bottom/right
		
- Using Sprites
	- Setting up some base box styling
		- Color, background/border colors
	- Combining images into one
	- Setting the initial background image and position
	- Using background-position to alter the positioning

- "Sliding Doors" (http://www.alistapart.com/articles/slidingdoors/)
	- http://www.jankoatwarpspeed.com/post/2008/04/30/make-fancy-buttons-using-css-sliding-doors-technique.aspx
	- Reviewing how sliding doors has been used to make flexible-width buttons
	- Looking at basic elements which we're able to use css3 for.
	
	
{this course needs labs, additional experimentation with positioning, floating, display}


========================================
Topics - Class Three

Using CSS3

- Understanding vendor prefixes
	- Remember to always define each vendor prefix, and then
		the attribute itself without any prefix.

- Border-Radius (IE9, Firefox 3.5+, Safari 4+, Chrome 4+)
	- Methods to achieve this effect today
	- What is border-radius
	- Adjusting border-radius
	- [LAB]:
		- Use border radius to create leaf-shape
		- Create the reverse leaf shaped
		- Style a series of LIs as overlapping full circles
		
- Box Shadow (IE9, Firefox 3.5+, Safari 4+, Chrome 4+)
	- Methods to achieve this effect today
	- What is box-shadow
	- Adjusting box-shadow
	- [LAB]:
		- Set the inset borders for all four sides
		- Using positioning and box-shadow, create a "window"-style
		div which covers another div with text in it.
			- Uses positioning, box-shadow

- Text Shadow (& other effects) (Firefox 3.0+, Safari 4+, Chrome 4+)
	- Methods to achieve this effect today
	- What is text-shadow
	- Adjusting text-shadow
	- Looking at ways of mirroring text (vertical/horizontal)

- Gradients (Firefox 3.6+, Safari 4+, Chrome 4+)
	- http://www.colorzilla.com/gradient-editor/
	- Basic Exploration of gradients
	- Combining gradients, box-shadow, border-radius to create a pill button
	- Using to :active class to offset during click

- Working with IE:
	http://www.smashingmagazine.com/2010/04/28/css3-solutions-for-internet-explorer/
	
	
	{this course needs labs, additional experimentation because it's too short}


========================================
Topics - Class Four

- Using CSS3 To Enhance Page Design
	(Ensure these work for all supported browsers)
	- Add top/bottom left border radius
	- Add a border-radius to the search box
	
- [LAB]: Styling Blockquotes
	- Use quote image for the left side of the quote (add padding!)
	- Color the text #999
	- Looking at blockquotes "quotes/open/close" properties
	
- [LAB]: Styling Code Displays
	- The code element, the pre element
	- Styling the elements
	- Encoding html for display versus processing
		- http://simplebits.com/cgi-bin/simplecode.pl
	
- [LAB]: Styling Anchor Clues
	- Styling icons for pdf, mailto
	- Styling icons for external links
	- Moving icons to the left
	
- Fonts
	- Limitations of fonts until recently
	- Other font replacement techniques
		- Cufon: http://cufon.shoqolate.com/generate/
		- sIFR: http://www.mikeindustries.com/blog/sifr
	- @font-face
		- Browser support: http://webfonts.info/wiki/index.php?title=%40font-face_browser_support
	- FontSquirrel Font
	- Hosted Fonts
		- Google
		- Typekit
		
	- Add new font-face for AaarghNormal
	- Apply to section h2
	- [LAB]
		- Choose new font from fontsquirrel, download
		- Add to directory
		- Be careful with path names
		- Apply font to .banner h2
		
	{this course needs labs, additional experimentation because it's too short}

========================================
Topics - Class Five

Print Style Sheets
	- @media print
	- Background images, items we can't control printing for
	- Hiding banner and search form
	- Removing floats, setting content to 100%
	- Adding href after each anchor
	
Mobile Devices
	- Introducing Media Queries
	- http://webdesignerwall.com/tutorials/css3-media-queries
	- http://www.alistapart.com/articles/responsive-web-design/
	- Devices:
		http://labs.thesedays.com/2010/04/01/choosing-the-right-platform-for-your-mobile-website/
		http://quirksmode.org/mobile/
	- Setting a base iPhone media query
		- Setting body, article, content widths
		- Setting widths for iPhone4
	- [LAB]: Styling the content
		- Styling anchors, text content for device
		- Hiding search form, banner, aside, static
	- jQuery Mobile
		- http://jquerymobile.com/
		- Docs: http://jquerymobile.com/
		- Page example: http://jquerymobile.com/demos/1.0a3/#docs/pages/docs-pages.html
		- Movie Ticket App Example
	- Testing without a phone:
		- http://www.marketcircle.com/iphoney/
		- There are other websites, but nothing that truly works.
		
Debugging
	- Steps for Debugging HTML/CSS:
		- First, avoid errors to begin with:
			- Adhere to a strict coding standard
				- Once you're used to seeing the code a certain way, errors stand out
				- You'll form the habit of typing things in correctly
			- Use a framework (yours or an existing) to ensure common issues are covered
				- Tips for creating your own
					- Keep project-specific stuff out
					- Keep the css organized so that it's easy to override
				- HTML5 Boilerplate
					- Downloading: http://html5boilerplate.com/
						- Review framework: html, css, building
		- Validate your html/css
		- Identify each browser the error appears in
		- Identify the steps required to reproduce
		- Google for the problem along with a browser
		- Step-debug to narrow the point of failure
		- Eliminate any variables (makes it faster to test too)
		- Eliminate known issues with browsers
			- Examples: IE issues with z-index, hasLayout
		- Debugging in Firefox
			- Using Firebug
		- Debugging in Chrome/Safari
			- Using Developer Tools
		- Debugging in IE
			- Using Developer Tools
		- Testing browsers you don't have (or versions you don't have)
			- https://browserlab.adobe.com/en-us/index.html
			- http://browsershots.org/
			- http://spoon.net/Studio/ (windows only)
			- IETester (windows-only, runs IE5.5-IE9 rendering engines)
			- http://www.webdevlab.com/app/screenshots (Mac-safari only, for windows-based folks)
		- [Debugging Labs]:
			- #1) Fixing a broken paragraph hover (Error: "" - means DOCTYPE is missing)
			- #2) Fixing broken paragraph (Error: "No p element in scope but a p end tag seen." - means DIV breaking P, replace with span)
			- #3) Fixing broken DIV structure (Error: "Unclosed element div." - there's a DIV missing a closing tag)
			- #4) Fixing nesting error (Error: "End tag strong violates nesting rules." Strong opened before span, move closing to after)
			- #5) Ampersand encoding error (Error: "& did not start a character reference. (& probably should have been escaped as &amp;.)")
	- Steps for Debugging Javascript
		- First, avoid errors to begin with:
			- Use a library like jQuery to avoid browser-compatibility issues
			- Adhere to a strict coding standard
		- Syntax-check your scripts (http://www.jslint.com/)
		- Check for common/known errors
			- IE7 and lower hates extra commas
			- IE works differently with ajax, form elements
		- In Firefox/Chrome/Safari use console.log
		- Use an IDE or tool with "breakpoint" support

========================================
Topics - Class Six


- [LAB]:
	- Build a webpage that matches the example.
	- Ensure it works in IE7+, Firefox

- Quality Assurance (QA)
	- What is QA?
	- QA means providing customers with a working, consistent, web experience
	- How do you test?
		- Browser/validation tests mentioned during debugging
		- Automated testing
			- Selenium http://seleniumhq.org/projects/ide/
		- Accessibility testing using web developer toolbar (cynthiasays)
		- Structure testing by disabling css
		- Script/interaction testing by disabling javascript
		- Colorblindness testing
			- http://www.vischeck.com/vischeck/vischeckURL.php
- Revision Control
	- Windows systems:
		- Subversion (SVN) clients - http://tortoisesvn.tigris.org/
		- Hosted subversion repos: beanstalkapp.com
		- Git on Windows
			- http://book.git-scm.com/6_git_on_windows.html
			- http://code.google.com/p/tortoisegit/
	- Mac/Linux:
		- git (by far the best)
	- Introduction to basic concepts of version control
		- adding
		- commit
		- reverting
		- github.com
			

- Evaluations

- Certificates
